services:

    app:
        build:
            context: ./docker
            args:
                WWWGROUP: '${WWWGROUP}'
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        ports:
            - '${APP_PORT:-80}:80'
            - '${VITE_PORT:-5173}:${VITE_PORT:-5173}'
        environment:
            WWWUSER: '${WWWUSER}'
            LARAVEL_SAIL: 1
            XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
            XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
        volumes:
            - './src:/var/www/html'
        networks:
            - sail
        depends_on:
            - db

    db:
        image: 'mysql/mysql-server:8.0'
        ports:
            - '${FORWARD_DB_PORT:-3306}:3306'
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ROOT_HOST: '%'
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
        volumes:
            - 'db:/var/lib/mysql'
            - './docker/create-testing-database.sh:/docker-entrypoint-initdb.d/10-create-testing-database.sh'
        networks:
            - sail
        healthcheck:
            test: [ 'CMD', 'mysqladmin', 'ping', '-p${DB_PASSWORD}' ]
            retries: 3
            timeout: 5s

    s3:
        image: 'minio/minio'
        ports:
            - '${FORWARD_MINIO_PORT:-9000}:9000'
            - '${FORWARD_MINIO_CONSOLE_PORT:-8900}:8900'
        environment:
            MINIO_ROOT_USER: '${AWS_ACCESS_KEY_ID:-sail}'
            MINIO_ROOT_PASSWORD: '${AWS_SECRET_ACCESS_KEY:-password}'
        volumes:
            - 'minio:/data'
        command: minio server /data --console-address ":8900"
        healthcheck:
            test: [ "CMD", "mc", "ready", "local" ]
            retries: 3
            timeout: 5s
        networks:
            - sail

    mailpit:
        image: 'axllent/mailpit:latest'
        ports:
            - '${FORWARD_MAILPIT_PORT:-1025}:1025'
            - '${FORWARD_MAILPIT_DASHBOARD_PORT:-8025}:8025'
        networks:
            - sail

    s3-create-bucket:
        image: minio/mc
        depends_on:
            s3:
                condition: service_healthy
        environment:
            AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID:-sail}
            AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY:-password}
            AWS_BUCKET: ${AWS_BUCKET:-local}
            AWS_ENDPOINT: ${AWS_ENDPOINT}
        volumes:
            - './docker/create-bucket.sh:/etc/minio/create-bucket.sh'
        networks:
            - sail
        entrypoint: [ "sh", "/etc/minio/create-bucket.sh" ]

networks:
    sail:
        driver: bridge

volumes:
    db:
        driver: local
    minio:
        driver: local
